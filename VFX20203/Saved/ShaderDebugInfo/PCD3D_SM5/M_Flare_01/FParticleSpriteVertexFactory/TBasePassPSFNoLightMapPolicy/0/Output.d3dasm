//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_ViewToClip;// Offset:  448 Size:    64
//   row_major float4x4 View_View_SVPositionToTranslatedWorld;// Offset:  704 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float4 View_View_InvDeviceZToWorldZTransform;// Offset: 1072 Size:    16
//   float4 View_View_ScreenPositionScaleBias;// Offset: 1088 Size:    16
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   float4 View_View_ViewRectMin;      // Offset: 1984 Size:    16
//   float4 View_View_ViewSizeAndInvSize;// Offset: 2000 Size:    16
//   float View_View_PreExposure;       // Offset: 2084 Size:     4
//   float View_View_OutOfBoundsMask;   // Offset: 2160 Size:     4
//   float View_View_MaterialTextureMipBias;// Offset: 2208 Size:     4
//
// }
//
// cbuffer Primitive
// {
//
//   float3 Primitive_Primitive_TilePosition;// Offset:   16 Size:    12
//   float Primitive_Primitive_ObjectBoundsX;// Offset:  300 Size:     4
//   float4 Primitive_Primitive_ObjectRelativeWorldPositionAndRadius;// Offset:  304 Size:    16
//   float Primitive_Primitive_ObjectBoundsY;// Offset:  412 Size:     4
//   float Primitive_Primitive_ObjectBoundsZ;// Offset:  428 Size:     4
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[12];// Offset:    0 Size:   192
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// TranslucentBasePass_SceneTextures_PointClampSampler    sampler      NA          NA             s0      1 
// Material_Texture2D_0Sampler       sampler      NA          NA             s1      1 
// TranslucentBasePass_SceneTextures_SceneDepthTexture    texture  float4          2d             t0      1 
// Material_Texture2D_0              texture  float4          2d             t1      1 
// View                              cbuffer      NA          NA            cb0      1 
// Primitive                         cbuffer      NA          NA            cb1      1 
// Material                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 2   xyzw        0     NONE   float   xyzw
// TEXCOORD                 3   xyzw        1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[139], immediateIndexed
dcl_constantbuffer CB1[27], immediateIndexed
dcl_constantbuffer CB2[12], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xy
dcl_input_ps_siv linear noperspective v2.xyzw, position
dcl_output o0.xyzw
dcl_temps 4
add r0.xy, v2.xyxx, -cb0[124].xyxx
mad r0.xy, r0.xyxx, cb0[125].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, v2.wwww
mov r0.zw, v2.zzzw
mov r1.xyw, l(2.000000,-2.000000,0,1.000000)
mov r1.z, v2.w
mul r0.xyzw, r0.xyzw, r1.xyzw
add r1.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r2.x, r1.xyxx, cb2[3].yzyy
dp2 r2.y, r1.xyxx, cb2[4].xyxx
add r1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_b_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t1.xyzw, s1, cb0[138].x
ge r2.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
log r3.xyz, r1.xyzx
mul r3.xyz, r3.xyzx, cb2[6].wwww
exp r3.xyz, r3.xyzx
movc r2.xyz, r2.xyzx, l(0,0,0,0), r3.xyzx
mul r2.xyz, r2.xyzx, cb2[7].xxxx
mad r1.xyz, r1.xyzx, cb2[7].yyyy, -r2.xyzx
mad r1.xyz, cb2[7].zzzz, r1.xyzx, r2.xyzx
lt r1.w, cb0[31].w, l(1.000000)
mad r2.x, r0.z, cb0[67].x, cb0[67].y
mad r0.z, r0.z, cb0[67].z, -cb0[67].w
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.z, r0.z, r2.x
movc r0.z, r1.w, r0.w, r0.z
div r0.xy, r0.xyxx, r0.wwww
mad r0.xy, r0.xyxx, cb0[68].xyxx, cb0[68].wzww
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0, l(0.000000)
mul r0.y, r1.x, cb2[10].w
mul r0.y, r0.y, v0.w
mad r0.w, r0.x, cb0[67].x, cb0[67].y
mad r0.x, r0.x, cb0[67].z, -cb0[67].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, r0.w
add r0.x, -r0.z, r0.x
mul_sat r0.x, r0.x, cb2[11].z
mul_sat r0.x, r0.x, r0.y
dp3 r0.y, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r0.yzw, -r1.xxyz, r0.yyyy
mad r0.yzw, cb2[9].xxxx, r0.yyzw, r1.xxyz
mul r0.yzw, r0.yyzw, cb2[9].yyyy
mul r1.xyz, r0.yzwy, v0.xyzx
mad r0.yzw, -r0.yyzw, v0.xxyz, cb2[10].xxyz
mad r0.yzw, cb2[9].zzzz, r0.yyzw, r1.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.x, l(0.000000), cb0[135].x
if_nz r1.x
  mul r1.xyzw, v2.yyyy, cb0[45].xyzw
  mad r1.xyzw, v2.xxxx, cb0[44].xyzw, r1.xyzw
  mad r1.xyzw, v2.zzzz, cb0[46].xyzw, r1.xyzw
  add r1.xyzw, r1.xyzw, cb0[47].xyzw
  div r1.xyz, r1.xyzx, r1.wwww
  add r1.xyz, r1.xyzx, -cb0[72].xyzx
  add r2.xyz, cb0[60].xyzx, -cb1[1].xyzx
  add r3.xyz, r1.xyzx, -cb1[19].xyzx
  mad r2.xyz, r2.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r3.xyzx
  add r3.x, l(1.000000), cb1[18].w
  add r3.y, l(1.000000), cb1[25].w
  add r3.z, l(1.000000), cb1[26].w
  lt r2.xyz, r3.xyzx, |r2.xyzx|
  or r1.w, r2.y, r2.x
  or r1.w, r2.z, r1.w
  add r2.x, cb0[60].y, cb0[60].x
  add r2.x, r2.x, cb0[60].z
  mul r2.x, r2.x, l(2420.113525)
  frc r2.x, r2.x
  add r1.x, r1.y, r1.x
  add r1.x, r1.z, r1.x
  mad r1.x, r1.x, l(0.001154), r2.x
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
  movc r0.x, r1.w, l(1.000000), r0.x
endif 
mul r0.xyz, r0.xxxx, r0.yzwy
mul o0.xyz, r0.xyzx, cb0[130].yyyy
mov o0.w, l(0)
ret 
// Approximately 80 instruction slots used
