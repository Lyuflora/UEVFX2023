//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_ViewToClip;// Offset:  512 Size:    64
//   row_major float4x4 View_View_SVPositionToTranslatedWorld;// Offset:  768 Size:    64
//   float3 View_View_ViewTilePosition; // Offset: 1024 Size:    12
//   float3 View_View_ViewForward;      // Offset: 1056 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1216 Size:    12
//   float View_View_PreExposure;       // Offset: 2184 Size:     4
//   float4 View_View_NormalOverrideParameter;// Offset: 2224 Size:    16
//   float View_View_OutOfBoundsMask;   // Offset: 2256 Size:     4
//   float View_View_GameTime;          // Offset: 2292 Size:     4
//   float View_View_MaterialTextureMipBias;// Offset: 2304 Size:     4
//
// }
//
// cbuffer Primitive
// {
//
//   float3 Primitive_Primitive_TilePosition;// Offset:   16 Size:    12
//   float Primitive_Primitive_ObjectBoundsX;// Offset:  300 Size:     4
//   float4 Primitive_Primitive_ObjectRelativeWorldPositionAndRadius;// Offset:  304 Size:    16
//   float Primitive_Primitive_ObjectBoundsY;// Offset:  412 Size:     4
//   float Primitive_Primitive_ObjectBoundsZ;// Offset:  428 Size:     4
//
// }
//
// cbuffer NiagaraSpriteVF
// {
//
//   uint NiagaraSpriteVF_NiagaraSpriteVF_MaterialParamValidMask;// Offset:  184 Size:     4
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_Material_PreshaderBuffer[104];// Offset:    0 Size:  1664
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_MaterialTextureBilinearWrapedSampler    sampler      NA          NA             s0      1 
// View_MaterialTextureBilinearClampedSampler    sampler      NA          NA             s1      1 
// Material_Texture2D_0Sampler       sampler      NA          NA             s2      1 
// Material_Texture2D_1Sampler       sampler      NA          NA             s3      1 
// Material_Texture2D_2Sampler       sampler      NA          NA             s4      1 
// Material_Texture2D_4Sampler       sampler      NA          NA             s5      1 
// Material_Texture2D_5Sampler       sampler      NA          NA             s6      1 
// Material_Texture2D_8Sampler       sampler      NA          NA             s7      1 
// Material_Texture2D_9Sampler       sampler      NA          NA             s8      1 
// Material_Texture2D_10Sampler      sampler      NA          NA             s9      1 
// Material_TextureCube_0Sampler     sampler      NA          NA            s10      1 
// Material_Texture2D_0              texture  float4          2d             t0      1 
// Material_Texture2D_1              texture  float4          2d             t1      1 
// Material_Texture2D_2              texture  float4          2d             t2      1 
// Material_Texture2D_3              texture  float4          2d             t3      1 
// Material_Texture2D_4              texture  float4          2d             t4      1 
// Material_Texture2D_5              texture  float4          2d             t5      1 
// Material_Texture2D_6              texture  float4          2d             t6      1 
// Material_Texture2D_7              texture  float4          2d             t7      1 
// Material_Texture2D_8              texture  float4          2d             t8      1 
// Material_Texture2D_9              texture  float4          2d             t9      1 
// Material_Texture2D_10             texture  float4          2d            t10      1 
// Material_TextureCube_0            texture  float4        cube            t11      1 
// View                              cbuffer      NA          NA            cb0      1 
// Primitive                         cbuffer      NA          NA            cb1      1 
// NiagaraSpriteVF                   cbuffer      NA          NA            cb2      1 
// Material                          cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PARTICLE_DYNAMIC_PARAM     0   xyzw        2     NONE   float   x   
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[145], immediateIndexed
dcl_constantbuffer CB1[27], immediateIndexed
dcl_constantbuffer CB2[12], immediateIndexed
dcl_constantbuffer CB3[104], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texturecube (float,float,float,float) t11
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyzw
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps_siv linear noperspective v5.xyz, position
dcl_output o0.xyzw
dcl_temps 14
mul r0.xyz, v0.yzxy, v1.zxyz
mad r0.xyz, v1.yzxy, v0.zxyz, -r0.xyzx
mul r0.xyz, r0.xyzx, v1.wwww
mul r1.xyzw, v5.yyyy, cb0[49].xyzw
mad r1.xyzw, v5.xxxx, cb0[48].xyzw, r1.xyzw
mad r1.xyzw, v5.zzzz, cb0[50].xyzw, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[51].xyzw
div r1.xyz, r1.xyzx, r1.wwww
ge r0.w, cb0[35].w, l(1.000000)
dp3 r1.w, -r1.xyzx, -r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, -r1.xyzx
movc r2.xyz, r0.wwww, -cb0[66].xyzx, r2.xyzx
mad r3.xyz, cb0[139].wwww, l(0.000000, 0.000000, 1.000000, 0.000000), cb0[139].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r0.yzxy, r3.yyyy
mad r3.xyw, r3.xxxx, v0.yzyx, r4.xyxz
mad r3.xyz, r3.zzzz, v1.yzxy, r3.xywx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r3.zxyz, r2.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r2.yzxy
add r0.w, l(1.000000), -|cb3[3].w|
sqrt r0.w, r0.w
mad r1.w, |cb3[3].w|, l(-0.018729), l(0.074261)
mad r1.w, r1.w, |cb3[3].w|, l(-0.212114)
mad r1.w, r1.w, |cb3[3].w|, l(1.570729)
mul r2.w, r0.w, r1.w
mad r2.w, r2.w, l(-2.000000), l(3.141593)
lt r3.w, cb3[3].w, -cb3[3].w
and r2.w, r2.w, r3.w
mad r0.w, r1.w, r0.w, r2.w
mul r0.w, r0.w, l(0.999899)
dp3 r1.w, cb3[4].yzxy, r3.xyzx
mad r3.xyz, -cb3[4].yzxy, r1.wwww, r3.xyzx
add r4.xyz, r2.xyzx, -cb3[7].xyzx
mul r5.xy, r4.xyxx, r4.xyxx
min r2.w, |r4.x|, |r4.y|
max r3.w, |r4.x|, |r4.y|
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
mul r2.w, r2.w, r3.w
mul r3.w, r2.w, r2.w
mad r4.w, r3.w, l(0.020835), l(-0.085133)
mad r4.w, r3.w, r4.w, l(0.180141)
mad r4.w, r3.w, r4.w, l(-0.330299)
mad r3.w, r3.w, r4.w, l(0.999866)
mul r4.w, r2.w, r3.w
lt r5.z, |r4.x|, |r4.y|
mad r4.w, r4.w, l(-2.000000), l(1.570796)
and r4.w, r5.z, r4.w
mad r2.w, r2.w, r3.w, r4.w
lt r3.w, r4.x, -r4.x
and r3.w, r3.w, l(0xc0490fdb)
add r2.w, r2.w, r3.w
min r3.w, r4.x, r4.y
max r4.w, r4.x, r4.y
lt r3.w, r3.w, -r3.w
ge r4.w, r4.w, -r4.w
and r3.w, r3.w, r4.w
movc r2.w, r3.w, -r2.w, r2.w
mul r2.w, r2.w, l(0.159155)
frc r6.x, r2.w
add r2.w, r5.y, r5.x
sqrt r6.y, r2.w
add r5.xy, r6.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r6.x, r5.xyxx, cb3[11].zwzz
dp2 r6.y, r5.xyxx, cb3[12].xyxx
add r5.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.w, l(0.000244), cb0[143].y
ge r3.w, r2.w, -r2.w
frc r2.w, |r2.w|
movc r2.w, r3.w, r2.w, -r2.w
mul r2.w, r2.w, l(4096.000000)
mul r3.w, r2.w, cb3[14].x
mul r6.xy, r3.wwww, cb3[14].yzyy
add r6.zw, r4.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
dp2 r7.x, r6.zwzz, cb3[18].zwzz
dp2 r7.y, r6.zwzz, cb3[19].xyxx
add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.w, r2.w, cb3[21].x
mul r7.zw, r3.wwww, cb3[21].yyyz
add r3.w, l(-1.000000), cb0[144].x
dp3 r4.z, r4.xyzx, r4.xyzx
sqrt r4.z, r4.z
mad r4.w, -r4.z, cb3[27].z, l(1.000000)
mul_sat r4.w, r4.w, cb3[28].z
mad r8.x, r5.z, cb3[12].z, r6.x
mad r8.y, r5.w, cb3[14].w, r6.y
mad r6.x, r7.x, cb3[19].z, r7.z
mad r6.y, r7.y, cb3[21].w, r7.w
sample_l_indexable(texture2d)(float,float,float,float) r5.z, r6.xyxx, t0.yzxw, s2, r3.w
mad r5.zw, r5.zzzz, cb3[22].xxxx, r8.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t1.xyzw, s3, r3.w
mad r4.z, -r4.z, cb3[26].x, l(1.000000)
mul_sat r4.z, r4.z, cb3[27].x
add r4.z, -r4.w, r4.z
mul r7.xyz, r4.zzzz, r7.xyzx
add r8.xyz, r2.xyzx, -cb3[35].xyzx
dp3 r4.z, r8.xyzx, r8.xyzx
sqrt r4.z, r4.z
mad r4.z, -r4.z, cb3[37].z, l(1.000000)
mul_sat r4.z, r4.z, cb3[38].z
mul r5.zw, r8.xxxy, r8.xxxy
min r6.x, |r8.x|, |r8.y|
max r6.y, |r8.x|, |r8.y|
div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
mul r6.x, r6.y, r6.x
mul r6.y, r6.x, r6.x
mad r7.w, r6.y, l(0.020835), l(-0.085133)
mad r7.w, r6.y, r7.w, l(0.180141)
mad r7.w, r6.y, r7.w, l(-0.330299)
mad r6.y, r6.y, r7.w, l(0.999866)
mul r7.w, r6.y, r6.x
lt r8.z, |r8.x|, |r8.y|
mad r7.w, r7.w, l(-2.000000), l(1.570796)
and r7.w, r8.z, r7.w
mad r6.x, r6.x, r6.y, r7.w
lt r6.y, r8.x, -r8.x
and r6.y, r6.y, l(0xc0490fdb)
add r6.x, r6.y, r6.x
min r6.y, r8.x, r8.y
max r7.w, r8.x, r8.y
lt r6.y, r6.y, -r6.y
ge r7.w, r7.w, -r7.w
and r6.y, r6.y, r7.w
movc r6.x, r6.y, -r6.x, r6.x
mul r6.x, r6.x, l(0.159155)
frc r6.x, r6.x
add r5.z, r5.w, r5.z
sqrt r6.y, r5.z
add r5.zw, r6.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
dp2 r6.x, r5.zwzz, cb3[42].zwzz
dp2 r6.y, r5.zwzz, cb3[43].xyxx
add r5.zw, r6.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r6.x, r2.w, cb3[45].x
mul r6.xy, r6.xxxx, cb3[45].yzyy
mad r8.x, r5.z, cb3[43].z, r6.x
mad r8.y, r5.w, cb3[45].w, r6.y
sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t2.xyzw, s4, r3.w
mul r8.xyz, r4.zzzz, r8.xyzx
dp2 r9.x, r5.xyxx, cb3[42].zwzz
dp2 r9.y, r5.xyxx, cb3[43].xyxx
add r5.xy, r9.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r9.x, r5.x, cb3[43].z, r6.x
mad r9.y, r5.y, cb3[45].w, r6.y
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r9.xyxx, t2.xyzw, s4, r3.w
mul r5.xyz, r4.wwww, r5.xyzx
mad r9.xyz, r2.xyzx, cb3[53].xyzx, cb3[54].xyzx
add r6.xy, |r2.xzxx|, |r2.xzxx|
add r10.xyzw, |r2.xxzz|, l(-0.500000, -0.500000, -0.500000, -0.500000)
add_sat r10.xyzw, r10.xyzw, r10.xyzw
add r10.xyzw, -r10.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ge r11.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r10.yyww
log r10.xyzw, r10.xyzw
mul r10.xyzw, r10.xyzw, l(16.000000, 16.000000, 16.000000, 16.000000)
exp r10.xyzw, r10.xyzw
add r10.xyzw, -r10.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r10.xyzw, r11.xyzw, l(1.000000,1.000000,1.000000,1.000000), r10.xyzw
dp2 r11.x, r6.zwzz, cb3[58].zwzz
dp2 r11.y, r6.zwzz, cb3[59].xyxx
add r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.w, r2.w, cb3[61].x
mul r11.zw, r3.wwww, cb3[61].yyyz
mad r12.x, r11.x, cb3[59].z, r11.z
mad r12.y, r11.y, cb3[61].w, r11.w
sample_b_indexable(texture2d)(float,float,float,float) r3.w, r12.xyxx, t4.yzwx, s5, cb0[144].x
dp2 r11.x, r6.zwzz, cb3[67].zwzz
dp2 r11.y, r6.zwzz, cb3[68].xyxx
add r6.zw, r11.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r5.w, r2.w, cb3[70].x
mul r11.xy, r5.wwww, cb3[70].yzyy
ge r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
log r13.xyz, r5.xyzx
mul r13.xyz, r13.xyzx, cb3[47].wwww
exp r13.xyz, r13.xyzx
movc r12.xyz, r12.xyzx, l(0,0,0,0), r13.xyzx
mul r12.xyz, r12.xyzx, cb3[48].xxxx
mad r5.xyz, r5.xyzx, cb3[48].yyyy, -r12.xyzx
mad r5.xyz, cb3[48].zzzz, r5.xyzx, r12.xyzx
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r9.xzxx, t3.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r9.yzyy, t3.xyzw, s0
ge r9.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xxxy
log r6.xy, r6.xyxx
mul r6.xy, r6.xyxx, l(16.000000, 16.000000, 0.000000, 0.000000)
exp r6.xy, r6.xyxx
mul r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
movc r6.xy, r9.zwzz, l(0,0,0,0), r6.xyxx
mul r9.zw, r10.yyyw, l(0.000000, 0.000000, 500.000000, 500.000000)
mad r10.xy, r10.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
min r9.zw, r9.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
add r10.xy, -r6.xyxx, r10.xyxx
mad r6.xy, r9.zwzz, r10.xyxx, r6.xyxx
add r10.xyz, -r12.xyzx, r13.xyzx
mad r10.xyz, r6.xxxx, r10.xyzx, r12.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t3.xyzw, s0
add r9.xyz, -r10.xyzx, r9.xyzx
mad r9.xyz, r6.yyyy, r9.xyzx, r10.xyzx
ge r5.w, l(0.000000), r3.w
log r3.w, r3.w
mul r3.w, r3.w, cb3[63].x
exp r3.w, r3.w
mul r10.xyz, r3.wwww, cb3[63].yzwy
movc r10.xyz, r5.wwww, l(0,0,0,0), r10.xyzx
mad r6.x, r6.z, cb3[68].z, r11.x
mad r6.y, r6.w, cb3[70].w, r11.y
sample_b_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t5.yzwx, s6, cb0[144].x
mad r6.xyz, r10.xyzx, r3.wwww, r9.xyzx
mad r5.xyz, r5.xyzx, cb3[50].xyzx, r6.xyzx
mul r3.w, cb0[143].y, cb3[72].x
mul r3.w, r3.w, l(0.250000)
sincos r6.x, r9.x, r3.w
mad r4.xy, r4.xyxx, cb3[74].zwzz, cb3[75].zwzz
add r4.xy, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mov r10.x, -r6.x
mov r10.y, r9.x
dp2 r9.x, r10.yxyy, r4.xyxx
mov r10.z, r6.x
dp2 r9.y, r10.zyzz, r4.xyxx
add r6.xy, r9.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyxx, t6.xyzw, s1, l(-1.000000)
mul r3.w, cb0[143].y, cb3[78].w
mul r3.w, r3.w, l(0.250000)
sincos r9.x, r10.x, r3.w
mov r11.x, -r9.x
mov r11.y, r10.x
dp2 r10.x, r11.yxyy, r4.xyxx
mov r11.z, r9.x
dp2 r10.y, r11.zyzz, r4.xyxx
add r4.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r4.xyxx, t7.xyzw, s1, l(-1.000000)
ge r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
log r11.xyz, r7.xyzx
mul r11.xyz, r11.xyzx, cb3[30].wwww
exp r11.xyz, r11.xyzx
movc r10.xyz, r10.xyzx, l(0,0,0,0), r11.xyzx
mul r10.xyz, r10.xyzx, cb3[31].xxxx
mad r7.xyz, r7.xyzx, cb3[31].yyyy, -r10.xyzx
mad r7.xyz, cb3[31].zzzz, r7.xyzx, r10.xyzx
add r3.w, r4.z, r4.w
add r3.w, -r3.w, l(1.000000)
ge r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
log r10.xyz, r8.xyzx
mul r10.xyz, r10.xyzx, cb3[47].wwww
exp r10.xyz, r10.xyzx
movc r4.xyz, r4.xyzx, l(0,0,0,0), r10.xyzx
mul r4.xyz, r4.xyzx, cb3[48].xxxx
mad r8.xyz, r8.xyzx, cb3[48].yyyy, -r4.xyzx
mad r4.xyz, cb3[48].zzzz, r8.xyzx, r4.xyzx
mad r4.xyz, r4.xyzx, cb3[50].xyzx, r5.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
mad r4.xyz, r7.xyzx, cb3[33].xyzx, r4.xyzx
mul r5.xyz, r6.xyzx, cb3[76].xxxx
mul_sat r5.xyz, r6.wwww, r5.xyzx
mul r6.xyz, r9.xyzx, cb3[76].xxxx
mul_sat r6.xyz, r9.wwww, r6.xyzx
mul r6.xyz, r6.xyzx, cb3[80].xyzx
mad r5.xyz, r5.xyzx, cb3[78].xyzx, r6.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r5.x, v0.xyzx, r2.xyzx
dp3 r5.y, r0.xyzx, r2.xyzx
dp3 r0.x, v1.xyzx, r2.xyzx
min r0.y, |r0.x|, l(1.000000)
add r0.z, -cb3[82].z, cb3[82].y
mad r0.y, r0.y, r0.z, cb3[82].z
round_ni r0.z, r0.y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
div r2.xy, -r5.xyxx, r0.xxxx
mul r2.xy, r2.xyxx, cb3[82].xxxx
mul r5.xy, r0.yyyy, r2.xyxx
deriv_rtx_coarse r5.zw, v4.xxxy
deriv_rty_coarse r6.xy, v4.xyxx
add r0.x, r0.z, l(2.000000)
mov r6.zw, l(0,0,0,0)
mov r7.xy, l(0,0,0,0)
mov r0.z, l(1.000000)
mov r2.z, l(0)
mov r3.w, l(1.000000)
mov r4.w, l(1.000000)
loop 
  itof r7.z, r2.z
  lt r7.z, r7.z, r0.x
  if_nz r7.z
    add r7.zw, r6.zzzw, v4.xxxy
    sample_d_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t8.yzxw, s7, r5.zwzz, r6.xyxx
    lt r7.w, r0.z, r7.z
    if_nz r7.w
      add r7.w, -r0.z, r7.z
      add r8.x, -r3.w, r4.w
      add r8.x, r7.w, r8.x
      div r7.w, r7.w, r8.x
      mad r8.xy, -r5.xyxx, r7.wwww, r6.zwzz
      mov r7.xy, r8.xyxx
      break 
    endif 
    add r7.w, -r0.y, r0.z
    mad r6.zw, r2.xxxy, r0.yyyy, r6.zzzw
    iadd r2.z, r2.z, l(1)
    mov r3.w, r7.z
    mov r4.w, r0.z
    mov r0.z, r7.w
    continue 
  else 
    mov r7.xy, r6.zwzz
    break 
  endif 
endloop 
add r0.xy, r7.xyxx, v4.xyxx
add r2.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r5.x, r2.xyxx, cb3[86].zwzz
dp2 r5.y, r2.xyxx, cb3[87].xyxx
add r2.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.z, r2.w, cb3[89].x
mul r5.xy, r0.zzzz, cb3[89].yzyy
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t8.xyzw, s1
mad r6.x, r2.x, cb3[87].z, r5.x
mad r6.y, r2.y, cb3[89].w, r5.y
sample_b_indexable(texture2d)(float,float,float,float) r0.y, r6.xyxx, t9.yxzw, s8, cb0[144].x
mul r0.x, r0.y, r0.x
sample_b_indexable(texture2d)(float,float,float,float) r0.y, v4.xyxx, t8.xyzw, s7, cb0[144].x
mad r2.xy, v4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, r2.xyxx
add r5.xy, v4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r6.x, r5.xyxx, cb3[99].zwzz
dp2 r6.y, r5.xyxx, cb3[100].xyxx
add r5.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.z, r2.w, cb3[102].x
mul r2.zw, r0.zzzz, cb3[102].yyyz
and r0.z, l(1), cb2[11].z
mul r0.y, r0.y, cb3[95].w
add r2.x, r2.y, r2.x
sqrt r2.x, r2.x
mad r6.x, r5.x, cb3[100].z, r2.z
mad r6.y, r5.y, cb3[102].w, r2.w
sample_b_indexable(texture2d)(float,float,float,float) r2.y, r6.xyxx, t10.yxzw, s9, cb0[144].x
mad_sat r2.x, r2.y, cb3[103].x, r2.x
movc r0.z, r0.z, v2.x, l(1.000000)
mul r0.z, r0.z, cb3[103].z
add r2.y, l(-1.000000), -cb3[103].y
mad r0.z, r0.z, r2.y, cb3[103].y
mad_sat r0.z, r2.x, cb3[103].y, -r0.z
mul r0.y, r0.z, r0.y
mul_sat r0.y, r0.y, v3.w
sincos r2.x, r5.x, r0.w
mul r2.yzw, r3.xxyz, cb3[4].zzxy
mad r2.yzw, cb3[4].yyzx, r3.yyzx, -r2.yyzw
mul r2.xyz, r2.xxxx, r2.yzwy
mad r2.xyz, r3.zxyz, r5.xxxx, r2.xyzx
mad r2.xyz, cb3[4].xyzx, r1.wwww, r2.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t11.xyzw, s10, cb3[4].w
ge r0.z, l(0.000000), r0.x
log r0.w, r0.x
mul r0.w, r0.w, cb3[91].w
exp r0.w, r0.w
mul r0.w, r0.w, cb3[92].x
movc r0.z, r0.z, l(0), r0.w
mad r0.x, r0.x, cb3[92].y, -r0.z
mad r0.x, cb3[92].z, r0.x, r0.z
mad r0.xzw, r0.xxxx, cb3[94].xxyz, r4.xxyz
mad r0.xzw, r2.xxyz, cb3[5].xxxx, r0.xxzw
mul r2.xyz, r0.xzwx, v3.xyzx
mad r0.xzw, -r0.xxzw, v3.xxyz, cb3[95].xxyz
mad r0.xzw, cb3[94].wwww, r0.xxzw, r2.xxyz
max r0.xzw, r0.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb0[141].x
if_nz r1.w
  add r1.xyz, r1.xyzx, -cb0[76].xyzx
  add r2.xyz, cb0[64].xyzx, -cb1[1].xyzx
  add r3.xyz, r1.xyzx, -cb1[19].xyzx
  mad r2.xyz, r2.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000), r3.xyzx
  add r3.x, l(1.000000), cb1[18].w
  add r3.y, l(1.000000), cb1[25].w
  add r3.z, l(1.000000), cb1[26].w
  lt r2.xyz, r3.xyzx, |r2.xyzx|
  or r1.w, r2.y, r2.x
  or r1.w, r2.z, r1.w
  mul r2.xy, l(0.577000, 0.577000, 0.000000, 0.000000), cb0[64].xyxx
  mul r1.xy, r1.xyxx, l(0.577000, 0.577000, 0.000000, 0.000000)
  add r2.x, r2.y, r2.x
  mad r2.x, cb0[64].z, l(0.577000), r2.x
  mul r2.x, r2.x, l(4194.304199)
  frc r2.x, r2.x
  add r1.x, r1.y, r1.x
  mad r1.x, r1.z, l(0.577000), r1.x
  mad r1.x, r1.x, l(0.002000), r2.x
  frc r1.x, r1.x
  lt r1.x, l(0.500000), r1.x
  movc r1.xyz, r1.xxxx, l(0,1.000000,1.000000,0), l(1.000000,1.000000,0,0)
  movc r0.xzw, r1.wwww, r1.xxyz, r0.xxzw
  movc o0.w, r1.w, l(1.000000), r0.y
else 
  mov o0.w, r0.y
endif 
mul o0.xyz, r0.xzwx, cb0[136].zzzz
ret 
// Approximately 399 instruction slots used
